// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Goal {
  WEIGHT_LOSS
  MUSCLE_GAIN
  MAINTENANCE
  ENDURANCE
  GENERAL_FITNESS
  REHABILITATION
  ATHLETIC_PERFORMANCE
  STRESS_RELIEF
  PERFORMANCE
  MOBILITY
  COMPETITION
  ENERGY_BOOST
  STRENGTH
  MUSCLE_DEFINITION
  OUTDOOR_PREP
  MENTAL_HEALTH
}

enum ExperienceLevel {
  BEGINNER
  INTERMEDIATE
  ADVANCED
  PROFESSIONAL
  ATHLETE
  CASUAL
  REHABILITATION
  SENIOR
}

model Workout {
  id        String     @id @default(uuid())
  userId    String
  name      String
  exercises Exercise[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  User      User       @relation(fields: [userId], references: [id])

  @@map("workouts")
}

model Exercise {
  id           String   @id @default(uuid())
  workoutId    String
  name         String
  series       String
  repetitions  String
  weight       String
  restTime     String
  videoUrl     String
  instructions String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  workout      Workout  @relation(fields: [workoutId], references: [id])

  @@map("exercises")
}

model User {
  id            String           @id
  email         String           @unique
  name          String
  avatar        String
  height        Float?
  weight        Float?
  goal          Goal?
  experience    ExperienceLevel?
  publicProfile Boolean          @default(false)
  workouts      Workout[]
  createdAt     DateTime         @default(now())
  updatedAt     DateTime         @updatedAt

  @@map("users")
}
